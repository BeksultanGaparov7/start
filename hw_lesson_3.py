from abc import ABC, abstractmethod

class Notification(ABC):
    def __init__(self, message=""):
        self._message = message

    def set_message(self, message):
        self._message = message

    def get_message(self):
        return self._message

    @abstractmethod
    def send(self):
        pass


class SMSNotification(Notification):
    def send(self):
        print(f"üì± –û—Ç–ø—Ä–∞–≤–∫–∞ SMS: {self._message}")


class EmailNotification(Notification):
    def send(self):
        print(f"üìß –û—Ç–ø—Ä–∞–≤–∫–∞ Email: {self._message}")

notifications = [
    SMSNotification("–í–∞—à –∫–æ–¥: 1234"),
    EmailNotification("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É —Ä–∞—Å—Å—ã–ª–∫—É!"),
    SMSNotification("–£ –≤–∞—Å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"),
    EmailNotification("–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω.")
]

for note in notifications:
    note.send()